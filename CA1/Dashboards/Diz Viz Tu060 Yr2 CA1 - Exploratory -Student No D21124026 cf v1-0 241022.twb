<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Bottom N Nations By Rank' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='158'>
        <calculation class='tableau' formula='158' />
        <range granularity='1' max='158' min='1' />
      </column>
    </datasource>
    <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' inline='true' name='federated.14l3xz40vn5ld11fpwta01c33ugn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global_Happiness_Metrics_CA1' name='excel-direct.1uv61hh16r67sl10ohd1r0mk4ryb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/TU_D/Data Visualisation/DataViz Labs/DataVizLabs/Repo/CA1/Dashboards/Global_Happiness_Metrics_CA1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1uv61hh16r67sl10ohd1r0mk4ryb' name='HappinessMetrics' table='[HappinessMetrics$]' type='table'>
          <columns gridOrigin='A1:AK150:no:A1:AK150:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='integer' name='FSI_Rank' ordinal='4' />
            <column datatype='real' name='FSI_Score' ordinal='5' />
            <column datatype='real' name='life_exp_at_birth' ordinal='6' />
            <column datatype='real' name='GDP per capita, PPP (constant 2017 international $)' ordinal='7' />
            <column datatype='real' name='infant_mortality_rate' ordinal='8' />
            <column datatype='integer' name='population' ordinal='9' />
            <column datatype='integer' name='internet_users' ordinal='10' />
            <column datatype='real' name='C1: Security Apparatus' ordinal='11' />
            <column datatype='real' name='C2: Factionalized Elites' ordinal='12' />
            <column datatype='real' name='C3: Group Grievance' ordinal='13' />
            <column datatype='real' name='E1: Economy' ordinal='14' />
            <column datatype='real' name='E2: Economic Inequality' ordinal='15' />
            <column datatype='real' name='E3: Human Flight and Brain Drain' ordinal='16' />
            <column datatype='real' name='P1: State Legitimacy' ordinal='17' />
            <column datatype='real' name='P2: Public Services' ordinal='18' />
            <column datatype='real' name='P3: Human Rights' ordinal='19' />
            <column datatype='real' name='S1: Demographic Pressures' ordinal='20' />
            <column datatype='real' name='S2: Refugees and IDPs' ordinal='21' />
            <column datatype='real' name='X1: External Intervention' ordinal='22' />
            <column datatype='real' name='Standard Error' ordinal='23' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='24' />
            <column datatype='real' name='Family' ordinal='25' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='26' />
            <column datatype='real' name='Freedom' ordinal='27' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='28' />
            <column datatype='real' name='Generosity' ordinal='29' />
            <column datatype='real' name='Dystopia Residual' ordinal='30' />
            <column datatype='integer' name='area' ordinal='31' />
            <column datatype='real' name='birth_rate' ordinal='32' />
            <column datatype='real' name='death_rate' ordinal='33' />
            <column datatype='integer' name='maternal_mortality_rate' ordinal='34' />
            <column datatype='real' name='net_migration_rate' ordinal='35' />
            <column datatype='real' name='population_growth_rate' ordinal='36' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1uv61hh16r67sl10ohd1r0mk4ryb' name='HappinessMetrics' table='[HappinessMetrics$]' type='table'>
          <columns gridOrigin='A1:AK150:no:A1:AK150:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='integer' name='FSI_Rank' ordinal='4' />
            <column datatype='real' name='FSI_Score' ordinal='5' />
            <column datatype='real' name='life_exp_at_birth' ordinal='6' />
            <column datatype='real' name='GDP per capita, PPP (constant 2017 international $)' ordinal='7' />
            <column datatype='real' name='infant_mortality_rate' ordinal='8' />
            <column datatype='integer' name='population' ordinal='9' />
            <column datatype='integer' name='internet_users' ordinal='10' />
            <column datatype='real' name='C1: Security Apparatus' ordinal='11' />
            <column datatype='real' name='C2: Factionalized Elites' ordinal='12' />
            <column datatype='real' name='C3: Group Grievance' ordinal='13' />
            <column datatype='real' name='E1: Economy' ordinal='14' />
            <column datatype='real' name='E2: Economic Inequality' ordinal='15' />
            <column datatype='real' name='E3: Human Flight and Brain Drain' ordinal='16' />
            <column datatype='real' name='P1: State Legitimacy' ordinal='17' />
            <column datatype='real' name='P2: Public Services' ordinal='18' />
            <column datatype='real' name='P3: Human Rights' ordinal='19' />
            <column datatype='real' name='S1: Demographic Pressures' ordinal='20' />
            <column datatype='real' name='S2: Refugees and IDPs' ordinal='21' />
            <column datatype='real' name='X1: External Intervention' ordinal='22' />
            <column datatype='real' name='Standard Error' ordinal='23' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='24' />
            <column datatype='real' name='Family' ordinal='25' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='26' />
            <column datatype='real' name='Freedom' ordinal='27' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='28' />
            <column datatype='real' name='Generosity' ordinal='29' />
            <column datatype='real' name='Dystopia Residual' ordinal='30' />
            <column datatype='integer' name='area' ordinal='31' />
            <column datatype='real' name='birth_rate' ordinal='32' />
            <column datatype='real' name='death_rate' ordinal='33' />
            <column datatype='integer' name='maternal_mortality_rate' ordinal='34' />
            <column datatype='real' name='net_migration_rate' ordinal='35' />
            <column datatype='real' name='population_growth_rate' ordinal='36' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AK150:no:A1:AK150:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FSI_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FSI_Rank]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>FSI_Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FSI_Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FSI_Score]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>FSI_Score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_exp_at_birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_exp_at_birth]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>life_exp_at_birth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita, PPP (constant 2017 international $)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita, PPP (constant 2017 international $)]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>GDP per capita, PPP (constant 2017 international $)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infant_mortality_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infant_mortality_rate]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>infant_mortality_rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>internet_users</remote-name>
            <remote-type>20</remote-type>
            <local-name>[internet_users]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>internet_users</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C1: Security Apparatus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C1: Security Apparatus]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>C1: Security Apparatus</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C2: Factionalized Elites</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C2: Factionalized Elites]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>C2: Factionalized Elites</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C3: Group Grievance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C3: Group Grievance]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>C3: Group Grievance</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E1: Economy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E1: Economy]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>E1: Economy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E2: Economic Inequality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E2: Economic Inequality]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>E2: Economic Inequality</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E3: Human Flight and Brain Drain</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E3: Human Flight and Brain Drain]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>E3: Human Flight and Brain Drain</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>P1: State Legitimacy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[P1: State Legitimacy]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>P1: State Legitimacy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>P2: Public Services</remote-name>
            <remote-type>5</remote-type>
            <local-name>[P2: Public Services]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>P2: Public Services</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>P3: Human Rights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[P3: Human Rights]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>P3: Human Rights</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>S1: Demographic Pressures</remote-name>
            <remote-type>5</remote-type>
            <local-name>[S1: Demographic Pressures]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>S1: Demographic Pressures</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>S2: Refugees and IDPs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[S2: Refugees and IDPs]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>S2: Refugees and IDPs</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X1: External Intervention</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X1: External Intervention]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>X1: External Intervention</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard Error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard Error]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Standard Error</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>20</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[birth_rate]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>birth_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_rate]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>death_rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maternal_mortality_rate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[maternal_mortality_rate]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>maternal_mortality_rate</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_migration_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_migration_rate]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>net_migration_rate</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_growth_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_growth_rate]</local-name>
            <parent-name>[HappinessMetrics]</parent-name>
            <remote-alias>population_growth_rate</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='FSI Rank' datatype='integer' name='[FSI_Rank]' role='measure' type='quantitative' />
      <column caption='FSI Score' datatype='real' name='[FSI_Score]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='HappinessMetrics' datatype='table' name='[__tableau_internal_object_id__].[HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8]' role='measure' type='quantitative' />
      <column caption='Area' datatype='integer' name='[area]' role='measure' type='quantitative' />
      <column caption='Birth Rate' datatype='real' name='[birth_rate]' role='measure' type='quantitative' />
      <column caption='Death Rate' datatype='real' name='[death_rate]' role='measure' type='quantitative' />
      <column caption='Infant Mortality Rate' datatype='real' name='[infant_mortality_rate]' role='measure' type='quantitative' />
      <column caption='Internet Users' datatype='integer' name='[internet_users]' role='measure' type='quantitative' />
      <column caption='Life Exp At Birth' datatype='real' name='[life_exp_at_birth]' role='measure' type='quantitative' />
      <column caption='Maternal Mortality Rate' datatype='integer' name='[maternal_mortality_rate]' role='measure' type='quantitative' />
      <column caption='Net Migration Rate' datatype='real' name='[net_migration_rate]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Growth Rate' datatype='real' name='[population_growth_rate]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <group caption='Country Rank Set' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Happiness Rank])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo Democratic Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Bottom N Nations By Rank' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='158'>
          <calculation class='tableau' formula='158' />
          <range granularity='1' max='158' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='HappinessMetrics' id='HappinessMetrics_A86128148C2C4909B1DDD3A73AA0E1D8'>
            <properties context=''>
              <relation connection='excel-direct.1uv61hh16r67sl10ohd1r0mk4ryb' name='HappinessMetrics' table='[HappinessMetrics$]' type='table'>
                <columns gridOrigin='A1:AK150:no:A1:AK150:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Happiness Rank' ordinal='2' />
                  <column datatype='real' name='Happiness Score' ordinal='3' />
                  <column datatype='integer' name='FSI_Rank' ordinal='4' />
                  <column datatype='real' name='FSI_Score' ordinal='5' />
                  <column datatype='real' name='life_exp_at_birth' ordinal='6' />
                  <column datatype='real' name='GDP per capita, PPP (constant 2017 international $)' ordinal='7' />
                  <column datatype='real' name='infant_mortality_rate' ordinal='8' />
                  <column datatype='integer' name='population' ordinal='9' />
                  <column datatype='integer' name='internet_users' ordinal='10' />
                  <column datatype='real' name='C1: Security Apparatus' ordinal='11' />
                  <column datatype='real' name='C2: Factionalized Elites' ordinal='12' />
                  <column datatype='real' name='C3: Group Grievance' ordinal='13' />
                  <column datatype='real' name='E1: Economy' ordinal='14' />
                  <column datatype='real' name='E2: Economic Inequality' ordinal='15' />
                  <column datatype='real' name='E3: Human Flight and Brain Drain' ordinal='16' />
                  <column datatype='real' name='P1: State Legitimacy' ordinal='17' />
                  <column datatype='real' name='P2: Public Services' ordinal='18' />
                  <column datatype='real' name='P3: Human Rights' ordinal='19' />
                  <column datatype='real' name='S1: Demographic Pressures' ordinal='20' />
                  <column datatype='real' name='S2: Refugees and IDPs' ordinal='21' />
                  <column datatype='real' name='X1: External Intervention' ordinal='22' />
                  <column datatype='real' name='Standard Error' ordinal='23' />
                  <column datatype='real' name='Economy (GDP per Capita)' ordinal='24' />
                  <column datatype='real' name='Family' ordinal='25' />
                  <column datatype='real' name='Health (Life Expectancy)' ordinal='26' />
                  <column datatype='real' name='Freedom' ordinal='27' />
                  <column datatype='real' name='Trust (Government Corruption)' ordinal='28' />
                  <column datatype='real' name='Generosity' ordinal='29' />
                  <column datatype='real' name='Dystopia Residual' ordinal='30' />
                  <column datatype='integer' name='area' ordinal='31' />
                  <column datatype='real' name='birth_rate' ordinal='32' />
                  <column datatype='real' name='death_rate' ordinal='33' />
                  <column datatype='integer' name='maternal_mortality_rate' ordinal='34' />
                  <column datatype='real' name='net_migration_rate' ordinal='35' />
                  <column datatype='real' name='population_growth_rate' ordinal='36' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_C9BA92649CB7464DA2401AACF6B01786]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Geo Regions' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region' />
        <param name='target' value='Geo Regions' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Geo Regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' name='federated.14l3xz40vn5ld11fpwta01c33ugn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14l3xz40vn5ld11fpwta01c33ugn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Longitude (generated)]' field-type='quantitative' max='21521295.311995279' min='-18839868.805910792' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Latitude (generated)]' field-type='quantitative' max='14721489.150579616' min='-8681961.4592299834' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Region:nk]' />
              <lod column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' />
              <geometry column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='777' />
                <format attr='maxheight' value='777' />
                <format attr='minwidth' value='1340' />
                <format attr='maxwidth' value='1340' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Latitude (generated)]</rows>
        <cols>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F6E2C039-B9BB-47E2-83A0-A26F2BC7C8A4}' />
    </worksheet>
    <worksheet name='Least Happy Nations - 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' name='federated.14l3xz40vn5ld11fpwta01c33ugn' />
          </datasources>
          <datasource-dependencies datasource='federated.14l3xz40vn5ld11fpwta01c33ugn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' included-values='in-range'>
            <min>148</min>
            <max>158</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' value='' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='580' />
                <format attr='maxwidth' value='580' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</rows>
        <cols>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Score:qk]</cols>
      </table>
      <simple-id uuid='{5B52CC62-BBCE-4276-8F4D-26E5F3ED9EC9}' />
    </worksheet>
    <worksheet name='Most Happy Nations - 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' name='federated.14l3xz40vn5ld11fpwta01c33ugn' />
          </datasources>
          <datasource-dependencies datasource='federated.14l3xz40vn5ld11fpwta01c33ugn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' included-values='in-range'>
            <min>1</min>
            <max>20</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' value='' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='580' />
                <format attr='maxwidth' value='580' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</rows>
        <cols>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Score:qk]</cols>
      </table>
      <simple-id uuid='{FBC335D3-1036-4437-B5C1-191EA5370A04}' />
    </worksheet>
    <worksheet name='Regions by GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Regions by Average GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' name='federated.14l3xz40vn5ld11fpwta01c33ugn' />
          </datasources>
          <datasource-dependencies datasource='federated.14l3xz40vn5ld11fpwta01c33ugn'>
            <column datatype='real' name='[GDP per capita, PPP (constant 2017 international $)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[GDP per capita, PPP (constant 2017 international $)]' derivation='Avg' name='[avg:GDP per capita, PPP (constant 2017 international $):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[avg:GDP per capita, PPP (constant 2017 international $):qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Region:nk]' />
              <size column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[avg:GDP per capita, PPP (constant 2017 international $):qk]' />
              <text column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Region:nk]' />
              <text column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[avg:GDP per capita, PPP (constant 2017 international $):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0534695D-5452-49EE-8E3C-166BB13084B1}' />
    </worksheet>
    <worksheet name='State Fragility'>
      <table>
        <view>
          <datasources>
            <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' name='federated.14l3xz40vn5ld11fpwta01c33ugn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bottom N Nations By Rank' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='158'>
              <calculation class='tableau' formula='158' />
              <range granularity='1' max='158' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.14l3xz40vn5ld11fpwta01c33ugn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='FSI Score' datatype='real' name='[FSI_Score]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[FSI_Score]' derivation='Sum' name='[sum:FSI_Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]' />
          <slices>
            <column>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Longitude (generated)]' field-type='quantitative' max='21127664.934434094' min='-18947351.751144398' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Latitude (generated)]' field-type='quantitative' max='15347857.055589816' min='-7740138.4305183906' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:FSI_Score:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:FSI_Score:qk]' />
              <lod column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' />
              <geometry column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Latitude (generated)]</rows>
        <cols>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{63C90102-1757-4FFA-B3BF-1F9876D1E544}' />
    </worksheet>
    <worksheet name='World Happiness'>
      <table>
        <view>
          <datasources>
            <datasource caption='HappinessMetrics (Global_Happiness_Metrics_CA1)' name='federated.14l3xz40vn5ld11fpwta01c33ugn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Bottom N Nations By Rank' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='158'>
              <calculation class='tableau' formula='158' />
              <range granularity='1' max='158' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.14l3xz40vn5ld11fpwta01c33ugn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]' />
          <slices>
            <column>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Longitude (generated)]' field-type='quantitative' max='21127664.934434094' min='-18947351.751144398' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Latitude (generated)]' field-type='quantitative' max='15347857.055589816' min='-7740138.4305183906' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' value='Adjust Rank Range'>
              <formatted-text>
                <run>Adjust Rank Range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' />
              <lod column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]' />
              <geometry column='[federated.14l3xz40vn5ld11fpwta01c33ugn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Latitude (generated)]</rows>
        <cols>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FD7DA450-3F93-49C8-A918-7A59FCA0E984}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Most Happy Nations - 2015'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C21C2A39-1378-456E-9BA6-EB7C2E065FE6}' />
    </window>
    <window class='worksheet' name='Least Happy Nations - 2015'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C4AC5BD-5286-494C-BB18-FD74A2D1A741}' />
    </window>
    <window class='worksheet' name='World Happiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F2E92824-1CF1-4839-8393-D9795C7ECA72}' />
    </window>
    <window class='worksheet' name='State Fragility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='3' param='[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:FSI_Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D29BABD1-47CB-4DFD-ADD6-EC9C73F21F7E}' />
    </window>
    <window class='worksheet' name='Geo Regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[Country Set]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Country:nk]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9204E316-901A-4BA0-82D4-5E80568C3B60}' />
    </window>
    <window class='worksheet' maximized='true' name='Regions by GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[none:Region:nk]</field>
            <field>[federated.14l3xz40vn5ld11fpwta01c33ugn].[sum:GDP per capita, PPP (constant 2017 international $):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7084631D-99D1-48B4-91C7-3D86DA838ED9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Geo Regions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Least Happy Nations - 2015' width='192'>
      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
      APrJns5tAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most Happy Nations - 2015' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regions by GDP' width='192'>
      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
      zv8CWCgA0JtZq5MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State Fragility' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3NcV37n/Tnnps4JORAgwBwkisoaWTOaGY/X69rd2uB11fNe/MfzNp73
      8Oxueb32ejxjeUZjSaNABWaQAAkQqXPuvrdvOvtHN0CABEiQBClK3m+VShJuPLfPLyfRarWU
      YRg8iEKtRqFef+jv/xd9rN1b4+Zqh56MP3RMALFeHsuUCDNBxYsBoPsdLNGjq2VQSGToAaCk
      hgh9To6bzM9NIqTc85kJy2IkmXxuazoMhEqxWq0SKvVCnieEYDKdxvE8Wo7DSDJJu9cjF49T
      7XRoOQ6WrjOSTKLt+K4tx6HcbqMbhoFlWQ/dWAmB7XkvZBEvGzrtNqVSnWw2RTqT2vOczUqD
      extV9NAmbgmKtoUXGb5/gooi/Q4nhyos1R2Q+uDvGog2hD6Z3j1MGZIbGWZiYoTRiRxOEEAQ
      7PnMiUwGuQ9xvCzwfZ+O676w5wlA0zRShkGgFKau43Q6SClJRqPUbRvH97E9Dy8IyMZi+GFI
      y3GwPQ/9hb3pDwRKKf7wxSKrnQhxUeI//eI0kWgEIcSu886eOcbc0UlqlTrXry+he02UNPHN
      FKgQEOiaRjIZIVKs4ETGQCkY3EcGDoHrICM6ji8ZG82h7yGJtzCcSBAzzee59EOBoWlEDeOF
      MU8FVNptRpJJcvH70lgphaXraFLS6fW4V60Cfc7fdd1tCfVys5PvAUIITsxkSboFuoHB3/3m
      K65eXUI9INKlpoFSfHK1xIo/gZ2c729+wLQLJLwiuTBP6DmkjR5W0Cbay99/Tuih9AjKiDI+
      FNsmjJ3IxGLM5nKcHBtjLLW3JHqZ4AcBK5UKtufx8GqeHxq2jRcECCEQQmxzeYDZXI50NLp9
      brvX26We/asmAKUUa2t5ul1719+np8e4eHqUiOpSE8PcWm9zc2EF3/P46A+XKRUrKKWIxmIk
      RRuB2rohKIUMPaaGIjh6lst5iZYYIe1t4Bnp+88WGu3YLKVwiCvLLTqt9q53iBoGuViMuGVh
      aNpDEuhlRLvXo93rYWoaL8YCAE1KDE3D1DQAXN8nYhjb+r6UkolMZpd02IIU4l8vAdi2zTff
      3ebXX5f5x08X8R8Q2Y1ugIYPUqfqx/l2sYLneaxXXf7uszVWl+8hpOTiayeZ0IpIv4vlN9GC
      LrmEho+gTobQ67FhR6nKUXx539YKzRQgMYIOcUuQSvc5fMQwGE+lmBseJmIY21zth4Atzuru
      Y8M8DyilCJWi3esBcLdcpt7t0nIcoC8dVsrlvoTY433/VRKAUoo/fnGNtWKbYcsFz9klFoUQ
      LOV7JGMmhlsHFSCQ6LpBJmHhaTH+8XKbtXvrjI2PoEcThFoUPWgT9WsMxSXrTQ3pNtG9Pmf3
      zQwI7aF3cfUkk8MJYok4mpTMDw8zlEhsv8cPZfMDeL4P9Dnri0KoFAKod7u4vo8fhlQ6nW2V
      tdpu0/N9ZnI5onvYUP/qjOAwCHAch5998DrtZpN8sY6ha+x0BZuWxX/5s/MUNwvEEzGu31rn
      eiXK4t0NLsynqH9Xwtdi2N0uAB++d4ZbSxsYYgqpfI7MzRJcukarbeMQUA49hAoIpfWArq/I
      qQozU6eBvkeDwab/IW38LQSDTfegvfS8YXsetufhhyExw+BILocmJUopdE0jdF3yjQajySSF
      ZnOXgf6vjgBWVta5ulRhKKmzUAQTlzdPDW1vuK0fz7Qspo/OcHNhmeFcAqvcpNfTmJmaJCbX
      GMlZjI1PAmBFIrxybn77GY16k+zwECdPJPjf/3IbJQ2sTgEnNrV9Tkq0GUsqxkemGRrpu0/9
      MGStWmUqm0UI8UI56bNCKUXP87B0nd5AErxoWLrOeCpFu9cjYpqEYUjD7tt3XhCQiETww5DN
      RoNgYCT/q1GBlFL4vs/M7BTn5ocptwJ8GaEnIkSt+6qJYztcunRt+//DUKFpGv/1T0/x6rl5
      4ok4v/rpOYqNHn/7L8v8wz99QxAEtJpNNjeKKKW4fnuDTxZ9ri0ViQsbzWuDpiP9zvZ9u57g
      tfOznD57HF2/z4eajsOtQoFis0moFEEYUu92CQc/2MuKnu8TM03G02lSkQim/uJ5a8O2ubND
      3/d22CJCCPwgIGFZuyTUj14ChGFIrVKj3Wxy5U6VX31wnvljR3A9j8atBmMZg+GRoe3zLctk
      rdBkvlIlN5Tj7Jm5h+6ZSKU4NpXG80MSUQNN01hbL/PHW23+8sMIJ48Oc2NtlfVKyIgZoHtF
      itYs0e46rmYQCo2EGRIb6Po7IYTY3vS25+EHAaFSxC3rpeZWmpRk4nFWymWCAeG+aChgIp3G
      0DSkEGw2GtvH/DBkqVQiF4/vsvd+1ASglOK7K3e4tOwgQo/hhI7reoRhwPz8NEdnJ4lEI7uu
      kZrG8aNjXL12lw8+yO6piwshGM2YjE9NoQ04XSYV5eRoBzNi4XkeI3qdPFPcCyMoXQISXdcw
      3CJRU/DLn76FuUcEXtDfTFHTxNJ1spkMUggM7WED+mXC1vvNDA1R7XT6UusF2wJKKXq+T9yy
      8IJglwTo9HoIoNhs7rrmR00A9Vqdr5e7KC2K0ixk2CAataiVK2SGhrY3v+95hGG4vSHPnZ3H
      HbjVHoTneVz55goLBcWxUpf52VGGR4YYnxxnfHKcpbsb/OFqDU9MIYRAafc9Dy1rCkIfN2xz
      +bubvP76eawHCDBUiqFE4gcR+NoLfhAwnkrRsu0XTgAAm40G9sAWeRB7vc2PlgA67Q4ff3mX
      QCaIuwUcmcLVdexulyu387yXSmGYfc9PuVzl6o17/PLnb25z/FazTSanI6VkcWERz+mSyqQZ
      n5qiZ9t0VJbvNjXuFlb4s3eg1uywuLhKraMg0BFmhj4/F8jAQfOa+EYKpUdxRIobFZeT7fZD
      BAB9112n12M0lUKXksgjUiReFmw2GuhSUmg2iZvmdiT2+0DXdQ/sRftREoDdtfny2yUKbgKh
      AsZiPutdmw9eO8rV23lmp0eIxvsZmj3H4Y9XNgmVgVJq+8NdurpCMpbn9PEJCvkyi/UIkWCZ
      sZUqF84cJ//lImU1jN11+O+frKP5NpNWl4wpCdpdYm4XFwtJQNby6IQaE8M+S9UuIZKLk4rc
      8NCe7x8oRdd1sV2X7AMRTD8I0KR86dykw4kEC/l+qocQ4oVFgveC6/vbMYnH4UdJAN9+t8Dt
      WhQrtDHdCmcunuKY65Mv1lm4U2SzYrNRqPP2xWP9rMGYyVrFxe50iMbjSCkZy0S4slQh7LWo
      2pIsFUrWLHq3Q250lJ++Lbhzd4OhoUk+X6jj+IKKa/H6mSl+Pj8NQLdjU6/VmZmb2Y4/2F/c
      ZHYyy/yJo4/dxFIIwjCk2G4jhCBUipbjYGoaiUiETCz20rhKdSmZGKQlb7kev08clABfZsfC
      UyMifV4Z7pJy1zl7cop8uY3neVy7tUEoLSpenJtlnS+/uo5uGAwldXx0vvzqGn//20vcXd7g
      yMw40V6BarFMzZG03P6nCpXathdipmDu2Czz4zFQihg200fGMC0L07LI5DIcPXYUNVAHDMPg
      T3/+Bu12B7vTfew68o0G67Ua5XabYqtFqdXC8TyajsNGvc5SsbjL0Ps+IYRgKJHA0LTvRfd/
      Wmh//dd//f/qexgMjU6HRqezxyUvP8anJhgdyTI9PYapS75dKDI7nmI530YgCPS++lNvOcyN
      Rcmk42wU6mx2LGzHQ6mQs6dmiMUi3Mk7KCFBKQIjiaUcktImEovRqDcZGRvFlAE3N106+hCt
      /DIjw2nCICAIAhZv3+X3X69x/U6ZywsbJHSP+fkjROPxA6kxXhDsy82CMKTtOKSi0V3FHt8n
      IoZBtdP5XlWgJ4FwHEftVRCzUiiwUix+D690uPB9n067y62lDZbW6rREGrNXwbVyIHR0v4Wl
      Czyl4co+J//JMQMpFHOzE7SaTQLP46PPbtKJzpDr3WU0bbBWC+hEJvnVhSz1ZpcvlkMQAqNX
      QUoNUxfERJeCGt2VAyQDm3ePRzl37sShrXE6myUTix3a/Z4WTdsmYVks5POESv0giODlYBvP
      Ebquk870PT6WDkavwkTUZsJsccSqIgnpiCQ+OqgALbAZG4rzzUKBZrPJyPgYw+Nj6FYMEbqk
      knGOnjiBHZlASZNbK1W0HYzcs4boGRlaIk2BiYcT4KSO2iMp7lnwMujcAKauc7tYxNJ1hvcI
      8r2M+FEawXvhtVeOcebEFHbXpuf6fHFllc2OQEmd41mP00dzOI5LKjVCbjjHf/2LLLrR/zya
      rvOrPzlNEAREo7P0nB4jxjoFX8f1Q8ZHM2i3Vgg1Cxm6fXXJvO/H1/wuSkhCLYLmtvDsw9Xb
      W45DvtFgPJ1+/MnPEYamkbQsqoMo9g8BPzoCCIKAbrtNsVTnyJHxXdFWKxLBtCw++WKBgh3B
      lC7vnEpx8uTMQ/r4VowA+gZediiHUoriZp50NsOrJ4axPUk8kSY3nOPD83XWyg4Rw2J5vYbd
      87FEDx0PM5ElagRUnZDpqTivXjh96OuudTrfKwEopZBCEDVNYr5P9wXWBT8LflQ2wObaBr//
      dpNuYBBIi/GYy/mjKQIlSCVjjI4Nsi59n2q5SiqdJLKjXO5xcGwbqd1PnQ6DgF6vRyQSQWra
      dpKV2+sRBiGariM1iRz47QPff2Td77NACsHJsTH07yllIghDBFDtdGjY9v+VAN8HkqkEji8J
      9P6mztsRSperKM1AE03+zZswMTGMruuMjo/ue5+dATHoS5VyvsBmqUGtXOH9D97C8zx+/clt
      Gj2N0bgik7TIxQWnz57EikQIggDf85BS3+7koBvGQ/c+LIRK0XHdXfWvLwJbRN9yHFq2TdNx
      fhDG7xZ+VAQgpSQXUxR2SN/A6BtjIfDRN3n+XdTcs9WJUop2s8nKWoV7xTY/uThLJpNGKcW3
      31zj6j0bze/2K7jubhCGAY22j28l2LBho6t4d65fu7u5WeLzKxtUOwHvnkoxc2Scy9fvYegS
      z+2RTvff6ejMOPHEw7WqT7V2IXA9D14wAdS6XTLRKEnLImGa2J73QksinxU/KgLwPI+SrcM+
      WoAfKNbXNnF6LmNjw7uOhUHA5nqejXyT9W6Ke2vlbQKoNHqoMMCOTWO6dbLpKKuFFr6V2b4+
      TpvTp16h2Wjy20t5HGKMJB00Qv72Hy/RNieQfpdo2KRTjoIQXFu5zX/48NQTqWH7IVSKhm0z
      nEw+9zQJPwjww5AgDGl0u3R7PXKxGPlm8we1+eFH5gYtlpuE8uHkMlTIqF5n2Ozw2ZLH19c3
      qJbL+J5Hq9mi1WjS6XT4dKFJoRliOkWmxzMopVhcvMf7b58hSj+l+vS4xr3lVXq23e8CAaAU
      p48kMQyDqwvrOMoCFXJsxODK5Zs4YT8jNNRjDMU1RNgDpWj4Ma7dvHeoJYSO5z33kkRd0/AG
      dQq5eJy4ZXGnUqH7A9H7d+JHIwGUUtxdqwK7VQqhAk7lXO7VDLoqDRJUr8Tf/ssKsYjOu6cy
      fHFllbfOTyM0A0fGORKvkhseouc4fH6jwlypTk9PoZBcKRnMyCK5qTlk6DKT6KL0KKePz6OU
      Il/pgkhhhg6mYdE0pwi1yHYtsC2inJ3QiRk+y/fyaGp/W+RJYWga9W6XsVTquUsBU9dpdLt4
      g/TnzqAL2w8NPxoJ4PZ6lLpyd9G5CsnqNpqu0VVbzacU+V4KV0vScA2+vbZCXaVZWK6QigxS
      of2+sWpFIrxxMsfNskZPT4PUUFqEvJ/l6FRf/YkmU/zqp+eJJeLUyhUqbl8CeRj4fkBEuvdr
      AkIP06sTCdsUChVKcpJv77l8+vn1Q+HaXdclHdlDAj4HWLpOKhrFCwJsz/tBGb478aMhgM31
      PHawu+1FVLX58K1Zqq0dVrGQBAOOrIROXo0TahHqjiBu9n/Gtqttd3w4fXKGf/NaDgvn/n11
      hWGYWE6BkzP3C+o9399ukqWAarFM6LlI//613Y7N1bsNysUyulPF05MsbTTZWC8cynfQnnMT
      LaXUNrFGDIOpbJZat0vvB6j+wI+IACamJ/jgdAxD3a/kysYNwsCn1AZUsN25bRtCbEuMlmeg
      D6K4vhZhM9/vJSk1jSOzU7x1Mo0IeuhOmdG0QaXWQtP1XcXqSoESA61SaNgiCkaUUA58/0Kn
      Hpmll5jGiwwRDpLyAgxuXb9JuVDAe4YAkqnraELQchz852SMBoNOC1tEoEvJaCLxvXWCeFY8
      FwIIwxD7BWeSWpbFqZOzXJyNgAoZi9icmcsxPDrCB2cSTFl1htxlZODseX2gRbjTSQ2IQrK8
      0dh1/MT8JDm9zQevjvHeO+dZuL1K25zgX64W6Q26kGmahhwYuAjBajfOaFKCGHxmIVCaBULD
      i00QGn17Rbot1gtNPvr17/gfv7n6UJvEg8IPAhq2zWa9vt0p7bChaxox06TT69Hp9XB9H13T
      Xnj84bDwXIzgqzdWWMl3mcuFnDx7Eiklmq6/kCqmU8enCNUaF145vx2AisST1N0mHXNmz+5s
      W9hOUlOKZNzcFbTSdZ3/+OdvITWNjXurrLk5kIK6o1Or1hmfHGdkbIT35os0amUWyhLPGuJu
      J4mUj163Fx0hMOJ4oYve7fDNpSu8/7N3n/h7eWHIZrOJJgSVdhul1EMVZYeBcNCGvNxu4/k+
      U5kMk9nsD8II9lyXzdVVyoUSx86cOjwCcHsun391A19EaaokSgYsNSVrn9/F7fX4yasTDI2O
      9HNGDjF33bHtXX70SCzKxQu7U41jsQhhCFrQRtM00jFJsyfpqQc7tQ0gBNfXbDKRBY6fPonv
      edjdLulsFgBpWGhBiUAmUUKyWagzNjGGEIKOr3O1kQXzfnPWh7Clhm0149IsAmki/S6iu8Fa
      XvLRbz/h2Ik5Zmcnn4gQNCnJxmJ0XZdCs0kyGkU/5FqBUqvFSDKJHMyQUEoR/AD8/0sLt8mv
      rVOqOyAEzc7lZy+ICcOQwmaBb66tUu0K3MgoSA1hREC3CLQYyohRyJe5t7jI7U2HTqtJ1BAI
      sXuDPMkPHQQBYRBy+evLWJEosXgU3/f3bCsYjUY4NpVkLO5zZDjKSDbKdErRKq5jy9SeRBAK
      g9VSD6/TIBGRqDAkOuCmrWaLW5uDoRdCUK21mB4yiUSjjORS1AvrSLuKqzTUQP8XXnf7/KhX
      ISpsPMzd6pE0EEEPXxjUVZZ2eYOJ8RxW5OFcrf2gAXHLYjiRQEiJpWmHmh/kBQERw6DS6dDu
      9QjCkI7r0nScl6Y6bScc26bVbNKs1Vm8scBqvkFVDBMzBet19ezJcLcW7nJ9E7DuN3TdD0qF
      CNHv2Si9NkKFDCUEhgxpdgNeOTHM6OjeheI7cXfpHtcWVjl1dIibax2iEZNffnCej//hN7z/
      pz8nCIJdSWsA168v8eViGxcThIYI3b7KIx8tBKVvM2I0+fd/8T5CCBq1Oq7r8b8+z+MPgm6p
      oMwv3pknOzyEruv9SrAbC7S7LrWWQ8vV8FwP4dTJjY6x2VRcPBrlxmqbmsruIkAx8BjF7LV+
      dmVulH/3ywtoB9zEw/E4uUSCjXqdTDSKpmkkD9k1Wmw2SUQiRAyDIAxp2jaFQSe7lwme6/L3
      /+PviEV0eo5L2TFRRpSOlkXHI/SfcUKM7/vcKfqwIyXgUf7src0PEA5ydIpbTg8Jn9/uMra8
      SSweZSQbY2xyAoBGtcrGep5cLs2VhQ2WGwYZXD67WcfRM5iOR6lQYqPmUy4U+ejSGkK3+Mkr
      48wc6asm2WySAHt7wyttH66qgm07IWJvcjQbkkgmEEJgd7r84+++48zcEEcjFap+gpoXJRaL
      sHjjJmdefYXMUA5N0zh1/iydVpv//zdXMbUQs1vgpx++x8ryPYaTOoHv8spsnE+XOvj6/eIR
      pfeNeE9paFIj4hT7NcUHJAAvCJBCMJZMkm80GH4OM8VGd/QsCmDXxJWXBT3H4do339HseLTb
      NvX4cYgIQtlvjRh4Nl4gnl4FUkpRr9ZZKoUI7elTfLdUFjFQAfL5MnfrJqVqm9G0jqFr/Mun
      l7meV6znq2y4KUJp4sgkvtYPbgVCZ+leGc9IUKh2aagkHhbL+Q6FjTyJiGR8fISk7qIFNim9
      R8Nht0GsFEL5nMu0qHVCAmH0k9/8kAvnjxEEAcvL6yzWTDaqLnNDGufPzrK4UqKpUlRbHkF1
      GR+dVDqJlBKlQq4tFrH1HK6M0S6u8t6fvE1ueIjiZgFP6Rwfj7BW6REKfedHITBTmJ0NAj1O
      IqaTyWYe+nZ7oef7250ZHN/H0vW+e/Q51Az7QcBatUrrOXmcngZKKdZXVrm7dI8rN9cJtQi2
      OYxw24R6rF/fDWhuA1+PP50EuH59kaYNpa6GMJ6+9G1fdUkIqq7F//psnflhjXq1ShA/SZOt
      VlMPwxtw0ap//76BMFjrGGx8VWIqWUB4bRLpNBdOTnHvk82+fq4UEDKT9Dk6YtJyM1yMu9Qd
      l0Y3SUa3MSyTW9duUHMtNCHxjSTldgUjXyJh+NSFwLdy9EKbjy+XONvwePv14wghSIsWRbIE
      RgIbFyEklUqFI/NzDA3n+Ju/+SemIyYr7vC2vQD0I2kq5PhknKPzs0/0XbdcoJoQ5OLxA6tP
      T4Ke57FSqbx0yW+Xv/qae4t3sCwdz0jjmMMY3TyBUmhOBTGY4bbVqeOJCcDt9bi92UPFRp/J
      ifpgO/K94IkICxUQ0Tn6O0I81eypUBistgFlghPSbdzmlYkEIS7SbTF7bJZGo8vn14u4MkpG
      7/LO+Ummj85Sq1SJJ5Ocf/017G4Xeekajt/h/Llj5HIZFjav9/UAwFM6np5geaPGhbMO66sb
      FLV+jyC9V2d0MobUJENDGSrFIpDjp3/yGrev32LI3qQspncYxRI3Os7GRpGJ9XXGpqb2XNte
      kPSbxHpB8MwetzAMcQeGrx8EuEFAqdWi/RLm/dvdLuvLK3R9DdsPUX4XPSz3VR4ri3JqhK5N
      KDQYMMwn3sK6YXBqOsntskOwV+blA9iLy+8Mp++HreO7+mvuc40QYtf9dl37wDVHY23OHZ8m
      O5wDIfBdl7WVezi2TVbUaQA1cizcLWK7ISdO9rtDB55HrVLlbjOKRY/i+jo37pap+rGBWBKs
      uVmQkiPDFst3VljbrIPIARDqEY7PDm9vyHQ2S61a428+WSerCzJJi0hYY80d2loUfnSETS/K
      J7/7lLn5GU6/en7bE/UoCCGwdH27FfizxF+klLQ6HZq2Td22cV/SiG+71eLOzVucOHuaW1ev
      ke9aKGngmrn+1E4hCWJjGE4RR7vfkuaJCUBKyelTMwxlq3x+q9XXwx+Bp0ny2mszPw32urZo
      m3x7u0Ryo4nj+uTrPqahcSRi0wzj2INZv3e7WZZvudxavzoYweOTMMHToqhQo9VxWGrF73Ns
      7hvWHU/jWC7DZwstGGg1obRYuFdndGK8H7eIRrl8ZRFfi6GbITOzGXRdY/1yc5eBHhoJGpFZ
      ri4WqNnXeP8nFx7rFk1GItu+/zAMn0kKlFstiq3WC5/68qQwDYNX3nydq5e+oeAmcPUIntmP
      2+x0NT+IfQmg3azjuS76YFDbgxgZzTGdr3G34SKkBvJw9Myn6SbzJD9OV0WwHUE/t80EDZwQ
      bpfqmH4drPH7ASqhsdm9v66uC5oOhIJavYQQqV3dn7ewXJe43y7hazsMVyG4V3TwXHe7UH9i
      NM18o8jZY9NMTIzg9nrErlXosHuD+1YW38ywuXaVrz9zOHX+DNnh4X05+1Yz3a3v8rRSQCm1
      a97WywwzEsHudrl5c4kgTBCYsb13ktB2qdH7sobxu/+dse/+P5y1G3seV0px5uQ0p9J1jM46
      BC9XNmCo1HaP+Ac/xF4/qG/lUGHQd4M+Bkoa5PW5PTc/9BPi1r3hfmKcUmhOFRF6vH48ibFj
      UNvI2Ai//JNzTEz0I+RXb96jo2L9d95SE0N/+53s9EnuLm/wm3/4mEq5uu/7dXq9Xd61p0Vt
      kO//tDiIqntY8FyX3330GQXzOJ4Wu5+U+ABCPdpvXTPAvgQgBczFbc5Uf4tTWN51rLBZ4J//
      cJVrV29z6uwpTCdPrLtyOCt5BqjBZBLX97crlsSgwezjJpaEerQ/w+uQmlbpocPr4w6poESG
      Gu8dlZw5c2zfDXnvXp5v77ko+u/b830UkG4tkHJW+2kSKqQ79Cq+MPEf4XqU8n4niifFFvF1
      ej0q7YMl5VVKZW5fu88oVRiilKKwkee7y7epFEtP/B5PintLS+TL7b53R6m+obsHROjtOrav
      ChTVFb6CuHAw1i/hpseRmsbNm8vczruI+BhOt0Hzq7v4qXkcPf1Cp4Pvha0Nr0tJMJgfu7Xx
      zQO4AgMr+0zP13s1pG7ianF8adHzbE5PWpQKDU6cmtt3QyqlWFytEgwMBm0w4kcPHMx4kp++
      /yq///hramIEEfSYGokxNjWx73v4g6npT6r7e0GA7bq4QbA9o+xxcGybP3z8JXUvgm5FKBbL
      bFT7o2frKoWLhWNvkBvZX2V7ViiluHPrTt/l6ZToRcf2PE8PbDQhMAIbT/YDhI80gj8tJukk
      jmAdf5dEJMLdxbvcKStEbAiEwDUyuAqw9vbNPw2eztHZx1awZ2vzC/rdEl5UL/3ASDKf7lBs
      1TGjEdo9Ra3S5PzZ0w+pAkopCvki0UjfU5Myw356hjTvG7BaBN/xMS2Ls6eO8NmNGiNanfnj
      Zx65po7r0nIcEpZ1YEIot1p0B5NyniSVeu3uMolYhMDVuHHjDgU/g0MGGXqEmgVKcWXdYXhp
      lePHZw583ydBu9GkbGt4egLNc9hrN8qwx6vjPudeOYfT8/j7T5dpedr+BKCAeCqFefEvtj/g
      0WNHEWqJb9Y7COt+OFwFPkLKXR6Rp8VOI/hBN+aDP/pe+qV6YPM/OEziuVZLSZ3bjThG0GE8
      G9LqaeTDEbylJr8cGcEcbEgYTLD5ZoO2ryNVgCcs0PoFNmEY9mduCUHdmOD2jfUExw4AACAA
      SURBVFucvXCedvsqmj7NkfmHB/c9iEKzSXx4+LHnAVTabUrt9lMNtjt68gRmNMbX395mrZci
      MPodL8ItT5YQ+FqUYqHEsWNHDv37O90udxfv0PUlUuvta5flTI/3PngX3TAobW5iKgeI728D
      rLY0lqxzuwYwCCGYOTZP1rAxvQbxoIJhFzmZrKF5rUNd2M5nPurYg8fFYKCcoWl7bv7nbZgp
      qRPqUeZnR2k7AaEWoeTG+Z9/WGZ9/X5yYbVSoxHEUKHC8JpEW3eR/v18+m0Pjh7lmzXFR//w
      Ea+9dZFXLp4/cFv1erdLy3Eeu15Nyqee6qjCEE3TiCZTBEbsYVejUqREk/PnTjwX5mN3ba4v
      rNIxx9C8FoG+d5wkm46h6TpKKS7fylP1+jGsfSVAd+YXDDW7g/jrfUgp+dlPzhH4PlLT6NkO
      oQpZ/Cp/mOsCHubw+0mDvQJej/vYz6NDm/Q6WNLn+FSS0dEhlNoEwKRH4PX49vIiUVMyNDrC
      5PQE7zZuYWgGk9MX6LaafPntInkm0R5wKQdWhlK3y92FBY6fPXvg9wmUInmAVozP0sfTME0m
      piep1xosN3qE2o7KMBVyelRw7vgxkunDTcpTShH4Ph9/uUhNDiN8Bxl6CBVs5/vsOJmxoTgo
      xeLtZa6tOdvFT/tKgOzEDEYkys3rt7m3vL6Lcwoh0A0DKSWO3aXnOEjxZFz1WTffswbYnuSa
      x0oNpYjam0zEXf7qz1/hnTdOcvXqbZIRCaHH2QmdP3trCldGuXJzDaUUruOQSkaZOzbXH753
      5AjvvHmGUe8uIujr4OmwjOmUB3XKUW58d+XAA7MVfSlg7hPH2YlnHrOkwIpG+eWFIZKigwg9
      hkyHn5+N87N3TzE6dvgG8Oqdu3zxh0+oV6toYQ/pd3AiYw+5P0XocyzrcerYBIsLi/zjl2sE
      HMALBH3qTibjrOYbFDY3eePti4iBN6VWqbK2uknLMyl0zcFUxINjvw31vM3VR3li9joWKoUf
      BI+efC4EjjXMa2fS20Gui6+fY7ZcZeFOngvn5xBS8u9/MbRdGlos1dANa1eMYnRinAsXTvHR
      5RqBZmGLBDPxTYqtFl0tzdTs7BN5djquSxCGjyyI8YKA8gHdnftBapLjJ+cBmDkyTrvZIpFK
      7jkH+TDQc3pc+uwLCnIKIZO4wkIq5yH1Swsc3pqzePOt17j69Td8eauOK3Z30H4kAWiaxvTM
      FJNT4yj6HRK2sLi0zro/CgiE+f04QHdKpL3UoAcRDrpCaPJ+XYI7qCLTpETyMIFseVH25WBK
      EekVODubYXR8t/stO5Tl3aEsi0ur/PFKnj99+wgTUxMopZicGKFSrqJp/XcprK8zOjnJ7PxR
      zm/kqdsOK06WFW+cd89HcVo1ssMjT/R9vCAg32gwncvtebzneWzU6090z8fBtCxyI89n4wM0
      azU+/u3vqAVJPDPVV9FDD/WQ7REwl7J548030HSdfCOkJR7uCXugXCD5AAcp5ots2PHtutfH
      4SCb80VA0NeLfd/HkBI/DNGk3JUr/6AkkEI8tP6dkH6HMxMGr7/5sHG6nZbt+7x9fpLxyXEa
      9QbfXrnDyflx/v7rGgm9yGhS0nIUo/kOb712jDfff6cfG1ha5856jW8WSvzFz848VfZlw3EY
      cl0ie6hChq7T+Z77+Fu6fuCWKs16nY9+/Tuqjk4nNt3n+EqB0JCBS7BjN2vK47VXjm+3o89k
      ElB8uL7lqRKal+6so8zpp7kU5dn9Apo9ShH7P9DT5aw8yblKKdzBvN29CkUObCArxWSsx4W3
      33jk+adPz2//txCCXDZJNNYPyTfDBM1BB5biZoDTusTPftbvPnHq5AwnTxyhUqqwfOcuk0eO
      HHidO9dSbbeZzD4c5Htaz89h4kn6CRXWNyi7EdxIX6Jte8rgIcPXEj7ZoftrziYjoFq7kxeV
      erq+QNPTY8huqZ9mekAIFZDxNtAayyjPISwvodrFXRvnQZXmsA2nIAy3o5u6lI/slnAQd6lU
      Hm9dPL6r9vhxSKVTvHL+ONFoBMnuPBslNFbbFrdur7C5trZNiMOjw5w+f5Zo7Olqe+u2TWXg
      59+5ruZL3MZkr2/f7XQQQhDtFWGXPBS78nsAIqZGZMfgQNcL2DNAtt8LNOr17faAD77Y5OQo
      RneDsLwIno3y9242tfOahL1CO7AIElMElSWOpHqMaWWCxgb4vd0bXj3Qwe2QoEmJISXmIEbw
      rBiJBbu4zJOgVq6g7dEvyBFxPr7l8fW1ddxej06rH18xTJPgKXPxFf1WJneKRTbrdVzfRymF
      85K2M6yWyqzeufPwARUSInHMIdQDm/nBwYNdX2N5aXl7XG27XsVQOwheKSzl7E8AiWTyoTZ9
      Sim++uI7fvcvl7nwxqvo2Wm09hqP84DK9ibHZkfxjBSoAN2MUiqUmD46w89eGycbFkmrKnG/
      jCV9kl4Bo726zQEPLc1iYNDuF0HeC4+SBDOjsScuN9y639jUJNnE/hqoqSlc19vmA9VKjSvf
      XnuiZ+1EoBS9IKDa7VJsNvHDkNoeDO77hlKKSrGAFXm409zQ6CgJr7yLOQoV9rMHHviNHGXy
      v78qsnD9Fp//7veMjw9xLtsh5W4yn1P82YU0f/Wnj2iMpWkaqcxu16YQgouvn6PTapHKZnnf
      KJNMvcHvv1qhw97iWevVee1YCtsNoLrE+eMjzJ96F7vTJZHqB0c+2JEoVS2V2VjPc3OlQeC1
      UEInHtRpyzTKePZZuFsFIp7n7SrL3DLUdcPYk+B22gX3PUhPLqXazSaRaBQhBK22A3LvNXVC
      i3givu32XLxbYLFu8Wq9/tDv8qRoOA7N/OEHLg8DdrfL0RMn9pylZkUiqNAn2BFsS/Q2sUUU
      38w8bLspRRgGvPeLnwNwZH6ed2ybUqlKyw5o2MGT2wC6YZDO5RBCMDQy0n/RwMVyiii3g2ps
      ELaLqLAvrmN6QHY4Ryxq8OH75zh+5hSapm1vfmDbzSiEYGh0hPOvnecnbxxjyHKJdVcxhEcs
      qD+RzbEfttKjpZR97i0EQkrEIIWYR3D8B6VB4Pt0nrBaKplOY5gm128u0yK977XNcomlW0so
      pei2O6xtVvC0BJe+unooHrXv3yd3H+HANuk5Dl99/PG+RVjJdJpoPLmt7iRocfb4KNGgSYDE
      HaRyA0jlM2HWmZ2b2d5bm2sbXL18k9vtLAUxxUo7eQitEZXi1FScWDyKGwh6tmK10KEiNFAh
      hgwpbOSJRiNkh/b2Rz8IIQRTRyYwIyaXvr6F0ygjtCiBnceJTT7T6z5oXMtnMLiv5eH25i3+
      04cnSKYf9jHvB6UUAoVQHkrs7TP3oyP8YcGm07nCSsWnJoZBaKxWfaqlEkOjhzdY4/tEu9mi
      1WqT3yxT7cLxk/tnulrRKGNzJ9hYcdBFyJ+9O8/k9DirxQ5Vuz8gRAiBUAFns21+9os/3Y6c
      K6VYXa8Q9HpgdUC3UDylF2gnpKYxc2yO4fFxJqfGmJ2fpe3rCBUyIkpMpgVXvrnyVONBR0aG
      OH9yHL/XRTg1Im4J4T1b1PKh939M4chOz9GDCIVOTybYyFee6JlKKc6fP8FPTsS25wnsOg74
      ehxfRvjqXkihl+hzPSHw9CRffXXtmdqovwxQSuG5LreuXKGa3+RuyUf12iRSCRx7b6eKEIL3
      3jnHv31zmP/y4TxTRybottucmE6jC7Gd0qGQjIyN0uu53Lt7b/v6oZTBW++9QcIt4FfvocLw
      YARw0FbnSinuruRxRZRJs8r509NcubmKmRwi9pTTECdnZ8nlskhNJ5OMElW7DbfnPQxia/7t
      vucgWCs0WVpcIb9ZfGyujlIKu9PB6XaZn5tEcxsPHd+JrRkCW+sMzRT5pqJRqz35gl4ibOWT
      aZrGratXCc0kdZXln6+2ubuy+cjr5o8dJZVOcv3ydf74xTWmjkxiqJ1Eo/B7DnfvrmHF+u1P
      8pslSvoRypUGRmqY9JGTmNI/GAEYponzGJ+xUorbi6tcuV0mp4pceGWeWDzGeEbnF794m0Tq
      4CrCTkgpOXfxVQzTpNFsE+mVkfb9etjnHWE+SEHN3Qr803WHv/2ixH/79Xe70p4fRBiGrC+v
      oOk6ViRCVDtgctsO+yPUImys3HvMFT8MjE1PEUskUXYNEctihA5Hjzxevfvms8+59N0Sli5I
      ZdK8Opfa9gRJ5WEakvn5aaaPjANQaodo0TQr3RReYgohBJHs+MFsAN0w0B6RDFavVLm3VmCp
      ajAZs3n9ndcR9H+0t3/200deexCMToxx9Ogkd28u4PpdMjGfbq+EYw3zvNPnDhIvCAeDuZUw
      qPkGv7mU51ehz+T0xEPEEwYB17/9lkgsSnZ4mF6oPTERK82kVmsQBMFz6fr2oiCEYGRiAsPQ
      UZ0yykqRCAvoxvxjr635UZrRNJVGlXKhSKOYB5FjOuEykTU5enye2I4eSq1KiWbooAKv7/AQ
      itTk3MGN4P244MryOpevLaO7dS6cPcHs8TeRUvZVgTB85s2/9ezTr75CuVCg2vRQjVXM5BTO
      g8UKh4ynVa9cEeHvv64xvlDi/QvTSAmxRALDNNENgw//4t+SzGT45PPruPqTS8bATLPY1ch+
      8x3nXnv1UL7x9wHPdWk1GsQSCTLCpxlJUSfFl9+t8JO3Tjzy2rilEfEbaJrNP3+2QNZ0GTFt
      PnzrBEOjDycN+n6AMXR/1oIKQxKL//PpvUDlUpXr15cwwy5vv3aCIPCxO51to1LTtAN3ND4I
      NF3n3MWLfP7xp0zOjHM33wJj/NDuf9hQ0mCzq/PfPt0EBVE6/OdfnScWj1Op1PjDN2tsdvcZ
      0EFfVWKHYbd93x1q0DeLm9zLf8rpE5PMH597ZNLey4YwDPn1P3xMx9MZHhkhlevhdzfpamny
      vYCe42A9oq17JqowvTqxpIEI2px75RVGJyfotNqEYUi306VUrjM+lqN2+xve9r6lvHGNm6P/
      AWlE0DvrfDhWeXIC8DyP4voGTs/jtddOoesasXh8Vx7P80Iyk+aVt14nHo+yVr3cV7Meqll7
      iSAESvRrVD2/h673PWEtOyDftfatoVb0I7dycA9gu8OFPmAwSmj04tNshCGdy3eZmp44UNvE
      lwGVYolbixvU2z7CitJttzh9dpJpIflioUEYHeb3X63w83fm982zmpqZ4bvVANfSmB5R3LxT
      Ym1ljVfeeI3FxTXu1AyUkeLu6hKeozFjHqMZ6Lj1AmY8xXzna45PhgcngK0+L/eWlpidn+Po
      9NQu0fsiOi94ns/Hn17lz3/5JgnRwa7fwItP4hnpx1+8Awcprt8LW8lkD9YaHwS+MGk1m+SG
      h5iZGuarO2sofe/BcoL+MLqt522lg2gP2hMDj1PTnOKf/vkr3rx4gvGpZ4uTvAh0mk2ur9l4
      saOA4tSYYmRyAs91iZt12kLQ7CqqpQpjk/elfBAEVEtlKpU6pUobpaDgpSiWApQeQXRrlD+9
      iTl5nq3mem76GKRhq2uVVb7O/2N8xPyJQWrM415WKUW9UiG/tobbczj/xkXGHtj8LwrxRJzj
      syM4ts17P/8ZuUiIcLvI8MmSuvaqH97rny2EYYgfhtuc+WnxzVdXuLe82t/g4tEd17a6Wmw9
      ba/CnK0GWErqbITjrK0//wZUh4HxI9MM681+MFBIer6gUa3xDx9dphX2pZiIZbm5uEmxUN7+
      vRav3+Sf/rjEH68WWWpnCGKjII3+UBEgNOKI+P1OGHsxKTc+SWagWT0yHbpUKNBuNnG6Xaxo
      lPHpaWbm53ZZ1i8aQgjeePs1Svk8iXSK1997i2hnGauxeKBrn+W5KLXNgZ9mGorSLFxriPHx
      EayIRS7+eO+S3MMGeBTsrv3c3cKHgfz6OtWeASrEdGtMDMWIJeLEsyMI8/7+KstJLi/2Xd5B
      EHD7Xh2lBorvXuqjNHA6jw6UzvaukNkhePdl47FEgjgvRrV5EhimybmLFxFCMDY1xczcLDdq
      sYE9sD+eZWOIwUYMlcLQtP4MsqdIn1hrm3x3/R4pK6TWDQ9nSrNSaGGPuLBJJn4Ys3od2yFu
      Ks5NC1579SKGaXLpi8sIItAtQ7TfeE11K5w60Q8EXvnyEtWOT4COiGT3/fbhY2zRcpDm8oaP
      LsELHkEA8Xic8gsedn1QmDvagw9PTBDfuIbttfGt3Hbk9DCwM/tTSkmoFFIIgqdlCkJyed1D
      hi6+OITBdUoxZrX56ZtzfHn5Hu32y5fevBdOnD3D/KmTaIPcHYATp45SunQHhIWyq+iahpCK
      eq3F4solNuugpSageIsgObkd9NpZQyK9FqFTxW9X0BM5xB5Swo5OM5r6jonEU06Iednguj6e
      mUH0ukS7eezceULtcKcibqVKSyEIBnXEj+ousUUweyEUBuGTzFRTipiwGU3phL6HHwqQEtsN
      GEoavHPhFLbjsFl1+PN3nk/rwcOGEIKdc+nsbpeb15dIxQzeOjYKKiSeTKBpGtcXVqnILFJu
      EIYeMjlCGLgozbz/G4QBZq9AbOQIWmSGoFPFW7+OHs9iZHbPWY4FVQy5I/39RS/+sHHmlTPo
      muTTmw2siIHZuU0jduxQJQHc5zS6NojcqhDCAB7YzFutGQ9nJJ0iqjr8xw9PYEUilPIFbtxe
      Z25uiqNHJ7eLe766fAeE4NKX3zFbLDI5O3vgzNuXAVJKLr5xDtOy6Nk2S4vLTJkmVxfWKbgp
      hGagZ6cJGpv47RIkDNjRAlEJ2fftR5IgBHpiCBXP4bcrBJs30VNjEPoIIfmr7OeMDMwMIcQP
      nwCklJw8dxozssyX18EwI6S7KzjWo/NJBOwbhDoQwgAVeNh6rj81Y1DkLwUknHWklaQjkqjH
      zCHeF0oxl3IYSxl89PkS9W7A2akI77x1hrX1IipUIKFcLLFccOjpGdbDGBvLHue6d3jnJ5ln
      ng/2omBFIgR+wOb6JiBotXv89tsqSs8gtP73E1LrVyBmpghaJRy7jIr1I75CCByRQBbuIDWN
      MFRomsQ0TSLTZ/E7VaQVRy9dZmjC7zeS+LFIAOgvZu74HCrw+fbaClFdYIweHYxzefR1Twul
      FCr0idlNPLuF03MJFWRo8M6bJxmbmeHjz65zp9wjNJ7cc5bVWvRcyR9XTQy3TTxqEItaJFIp
      Tg8SC5VSLNxaxdUSfaNRs1BCZ3PlKq1zx0kfcLTqy4D8xgafLbQQRhxFFmFG9g1vysQwKmgO
      WqIMzvI6tDwfZZgozSLmNUhPHsdtbKJLsAyTbDrCrarOSLTvgv60lPtxEMAWcsNDiGGL7sqX
      GA+VTT+MZ+0PKqSOFs+hxXMkgzYXj0bI5dKUCiVC3+fiqXES8RrfrqsnkjZa4BD2GuQ7MTAt
      PCuH2ysxMtSvomtUq1iRCGYkQm4ow7uZEM/zya/cIUDHkSb5jcIPigAmpqf4qVHk2sIaFTGK
      53nbcY8He8L6zQJeo44WOggzhpImeDZBfAIhNVQYkInr6F6dxOQMmhlBhQGN0ObbmV/gOV2E
      EBhTTzkn+GVFOpdF7y7CzBu7hnc/WMu7E4eSwhG4GL0K+U2Tm6ttPLuDYVq0Oj265U0IcrBP
      1HdPhD6+nmRo+AiN/B1cawRHS3Hn1hJS9kV7vlhDFyFnzx7bvuxeNk42l+HydzcYm9h7SMTL
      CiklI+NjvJ/L8ttPFmjr/WmZwWBE03aTMbtFq9nGMzNofodE2CE5PEynrdF1mwipofVqJOcu
      EBu6HxW3K2sMzZ5EajpW4n7mwI+KAIQQxPSAph7Z9beDxgAeNYtgr2dtn6+ZdKIzdLzBddEM
      n10vEjdC/NBkyqhS8pPYxBBCPlY3D6RBJBFHaDpiK/lNWtwplKjWLjE6OsTqeomhbJKpment
      d52Z63uB3v/pOwda78sGIQSmZfHm6RE+vtFERDK7pIAQgkBCTPOIxAM0LUZ89AxaJEE88Kjf
      +Q7XiJMdnkBqgk5hmZS7QS7IUxr7KXIPlfiHYSU9AczUcH9q5QBPs/kPet3OlImd/638HjOJ
      Dufm0igrRSQ9yn9+/yinhkO8QX7PLgQ9ZK+O7NXRnCoJ1UbG+v2GIpEoGRqcHXLA77Hh5biS
      F0yMD/HuB+++dIHKw0A6l0V1Kvc7v+34t4ymiSbTZOdeIT17Hi2SABSTMs/MsEnSy5OKGYzb
      t0j5RaRT4S9P1Mi2buz5m/6oJABAs+vBIfVmPaiN8JCe6nUZnxnn+nIT1xrGc9tIQ2d6NMFC
      eStY1e9lo/dqJJIp9OjYwDMlEUak704tLXBsapjRjMkfF+rI5ChvHkkwe2ScdDb9o9z8AE7X
      RiQeocJJHeF1UJ49iBqDFbE49vp5vv38K6Jeib8c/RpDwhcbEimS/DJzm1/f6OCf/As0w+yX
      u/bsHxcBeK6LG8jvPTla0zTiiTht5SOkjqF6XL65TrvbQ9eTpLUucymfeDxCsaZTjzzgsg19
      ZqwKxz84RzqTodVsE7tV4IM/OUs682SZry8rwjBkY71Az/XRNI2Y1e8LG41GKZdrMMgJ2g5C
      +jZh6IORwDANzo36ZLNDfHG9SC8yxnJNIx5rc+7iqyz+n/bO7DeuM83Pz3f22jcWi6S4iNRO
      W3J773Yv6e7pnnYyk8wACYIMcpmLXA1yldv8B0FyESAIchUEGGQGwSwYZDLd09N2esZju21L
      lmXLWihK3Ncq1l5n/3JRZJEUFy2WzCJdD0BIxTqnlsPv/c63vO/vN1vkr+cf8LujRRwvpOVJ
      CnEYNspcn7+LapjtZVXDPFkBUN7YAPPpao8f5kl7153Ha4okGk8QVYvYQuBHB1guL1CxBbqs
      YnlF5pQBFEcHa6/gbcRd49XvXuk8TqQS/M7bJ2u4Mz01w1Q1jjDbK1Wy0p7sSt/Bb0iEvU4Q
      BAjVQDEi/GAyQSwWYW5hnYHCKeKJOHPT90lIGyfMIWJ93Flc5vsv57h4RufTlQH+dqbB7exP
      WJqZ4vxAjD5zhmR+FCO2rUl1ogIgFosh/NU9u7NfhZ26MltsiWvtzGXZiS9VNopFvE3bUxn6
      KK113rowhtNsMlcfJTSy+y+NSknEUNgoFsnkcrve8ySRScdp3JlCi2Yw0gMoenvcKowohhHF
      AGQYELQq+PUSmpYiEotx/nz7zlBcW+fuQoMfvnWJqftLLLg5PKufz24tUEjrvPmjH2G3vo32
      5T28/Ausaz4bJHZVzXkrUycrACKxGGroEPDs/Kh2qjEoioK/KVB7qJaQHueDe03Q4p3fRVM5
      ZkshDaUfzL2li6FdQ3ErRGiRyVn4bncK1z4rDNOkJRJIOyRV30BL5nfNpbYycKNqwMS5/J49
      DV3XyEQCNF3nwrkRzNlVZtY91iN5SssbSLlOYaCPsdEBik2FRDZFzZUUH9xCKBqBa3PJu3qy
      AsButgiU/W0yn5atJcutBm8Yj359IQTs2P0VikYrOnzwypKUmM4KkxN5BkcuYkWOR1rzV0FR
      27a6wmuiJ0c6JuewvaKWDNd5/eUhVFVtO8DvSEKcXShSVQu4rothGIyPFchnatycmqVmjXB7
      YYWllTsM5hOkCuO89/nnRLODEMyT1VroSZ3mwlNog3YzkViUfOzZmD50is/DEN/38X0f13Xx
      PK/z86jzdzb4A/VGa8uE5VnGRgYYP3+2Kxu/lHKXVP6zKLpZWi4itSiG8FFUDX1TJEvTtHan
      4zZ4YTyNqqrcvT3Nwuz8LjU8yzJA+rv2VOLJBC9fPk3KW6SQhNHhPH39ee588A6p0y+iGhan
      0irDYyPomko+4p2sAAAoZKx2luYzYqvscEvpYuvxVibmwz8Pc6jRhm8TludJRQTnz3ZvLa8Q
      ohOY9WqV1cVF/K/oLbCwsNbOSNT3BrwQAoRC4PsUV1c5PTHCqbGRXaZ78YjBhQG9k1a98zpn
      4jq245Pry6IbBpcmz1FfuIvvuUzfnaZeq5HJ55lq5U7WEAjgzJlhFuc+pOjFEYmvng7QkXg5
      gK/SG0q3iSXr5LPjz81R8VnRGQKaJtF4HEVRWJqbY/ApbJsALl0YYe5aeX9tVBmS16uks6cP
      nGsNDBV2HC+Zmpql7qo06nVM2eLyS5d2DamCjXlaTgv0KIuzc5ydvISLcfICQAjBpckz/MOX
      la8sAf60yXKPHRRGFKHqXLw4/sTvcVTsDNRcofDU6nS6rtNnOWSiKuXNApfQbYEMGbAaTJ7b
      VtXzHIdmpdjeODRMgsoyrhoj1XxAWckSH5xgaDDH9NwGrVDn9ZdP79IUyub7uHgp5M5Si+GB
      DIapszI3z6nzL5y8AADo6+8jO1OhFD4fd8pn9ZpCNWl4Knaz2fV3gP14Em+0h0lnM/zsh+3a
      3muf3UNXFE6dTqEoGvHkMGEQ0Lr/CbniNVJqi5zRHv+7oUJcD7i6ovPmGYvPKmlq5iUUVeOF
      C1FOFUt7rqUQgr5CP1IuI0ODZCaN3Wyi6frJDAAhBK+9eIp3ry7hqM9uSfRx3veJHCu9FolY
      W3g4uY+LY7fzlZU2NnnRnEEVknpzmCCU1KorTJTeZdSsocV3Z+tGNo0FI3r7dyNmjau1KvFs
      H1JKkun9U0SEEPQPDrK8sMC921MYpkE2lzmZAQAQiUYYzUgerBXxjDSIp5cNfB6qdzLwyakb
      vPDmt8ieELOLp6FVr3FBnWUwHiLlDF4Inz+oM5FzDjxHSomht0tT7/mD25toQjzSh6IwNEQi
      mcT3fRLJ5MkNAICJ8UEG8w0Wl9Z5UI/jK8+mWP6gnv5xe3/ht7iY95kYv3Qshz6Py2Edh5SS
      +uo8I/VPGOz08mBqgnhEQ4iDDUC8EEb7NCTgtpp4ThMZjx/aQe38LLHECU2FeJhINNpetUjE
      4c4DaqUHqCJkQZ5CWE+eVPYs7gSKXeTyWILT4yMnLr3hYUpra6RzuX0nyfbyFG/5f0csLvZc
      V9PUqDqQPKBvMFTB1XmXV0+bvJUv8YsP/xhHTxHoEezRy2THLyB27A84NI5moQAAHyhJREFU
      9Sr+tV+h2jX8V94mnttWjxa2bUtzn15oZmWFmdWDjR6OG3ajztmNX5I0fO6Uo9xd9ijpw5SC
      OEEISuiSZwU0iznGDpVWedKxfuc8v8kbZywGh45XtdazJvB90g/+isn4+q5ruVINmFpsElN8
      LvZJjENGrV4Ad+sRgoZDZGmNxKbRiCcFX17+52jD54lt1k477/4J51evArAaWqxGB9EnXyee
      Sp/sO8BOrFice+VznG5+SX34h4xpn/AHufv4wXZDVpV2476+tMwfrbyOMJ5MWkW6TVTpgddE
      CPDRIZqDTQ3MqGwwMPB06+YnCc91yNC2eNpaai43QxbXbb494D7WnVFXodVyCZer9O9w2dGF
      5MUb/5vqDYO15BjNF35IrrGtmdqv2AT1eQo3Z4irT6AOfZzpVBRlTlNbmkas3qSkn6LSWiIV
      2bsZfmVA8vHqHe44Z3jVuMl8MMCKOrq7tliG6I15cqkIji9ouBKv1eBMv8b5yy8A0KjXeTC7
      RjQa4YsVQb2yQavVOlJ91aMiCILOjnrQqhHRQrwA7q/7yFCi+02uZP3ONfb97f8/XNO9NaSK
      SI+E2GuopwhI45Ku3cV7fwoNuUtB35cCXUiE+IYMgRy7hWFabf2YRp300q+ZqiXI6k1+NFzd
      t8fxfMnUesiFgkKxLvnPd18isNr+yLJRpC8Br7ww3PFGsJstHMfBMI19G/hHV++yYCeZiBa5
      8q3Jr+NrHykb6+vohomqqRimyey9aU6fO4tdXuPsxq8YtJpcm67zQsZFU+Sm1ur2+Vu5Vjvn
      B6qq4vs++qaP8GpDULxVIqv6T/TZSr6GFYW88Zgmeccd04p0GnlpbRVCn1eyRdSJ7/HuaoEg
      3Due1zXBpQEVRQjyCYW3++5A4BE6dSZSDb77+vlOQxdCEIlFSWczB/buqnRBKFTsJ/cEO45o
      uk6tWqO0tobTatE/OMDstffR5z6k5lt8UU6T0X1MDVRld+OH9iabrrdzfQzDQNf1jiJGR6VP
      kfhPWf8nkYThN2QItJOB0dOU56to9jT6wod4o9/hw/kPeTO3hqocfDHfGLL527VVWr7G8OST
      r+CMjg4we6PIhmbSajSf2jb2uJBIpUiktlfa4qbJGxf+Ree6uY7DB//135PQFXLRg1fWDlPQ
      cAIweLrs3yAIQTvhy6D7oSgK1ui32HAuEX/wfymur2GmJ1mpvctQ6uBGbWqCf3v2Nr9ZNCHc
      a8L2KPryOc4WKjxYc9D0b9Zlt3SdsVyOWq3Kvb/6n+gyQMqQM0GF1TsKa4UEFwaVJ/JCAKg2
      JJZ4ugBou38G37wA2ELVdSq2ICNvowz+mE+979AqfsCZ3MF/hMGUyou+x9KOUsUn4cL5EeLW
      AvqO2/g3YTiUjkYRQuA6Dn0Ln5BWNlOpFYCAj2cdimWVF8cN0pHHD4IzeXh/Kca4bKCLJ7uO
      W44734g5wH4oioI882NqgUFt6iMyA8NMJ95iqaERBEGnCCYIgs5PGIaUw8RTe/Pqus7pM6e3
      176/AY0/ZprkNudF7XLSvd85oQRMhlWWp6rcWw0eu1PQFMEbL0ZYzGSpBkrnlVuheOxL+0zv
      AF9Va/PrJhJPYF78HuWZmwAk8qe4tQ4R9z2S5v6bXYHQn/g7mpqGAAxVJWIYlFstHN//yuna
      x4H8ZopCvVZj7S/+C6Ni74qNobTTIArCpbVS5no1zrlRg5hx+HWWUrJchbDcouSpLHsGlUAh
      bAWoumAs6pPXD18hemYB4Ng2G+tFEukUpmXtMkDoZhRVJTtxufNYxLLcW+7j1Uhp3+Pjik05
      CPb15JVS4nseTr2CYlhE4+2cE11RsD2PUEo0VSUbjWJqGmv1Og334JyX405U01ClxLZtavUa
      icYK+81pd67CRZSQUbvK9B2L5FCc0cz+E+SGCzdnfKLlGkOi7XUkpcdMaCKlh+5JFssqc6bF
      eNQjrQadlSaB5NOSSUyozy4ATMtiYPgUjXqdxZkZfD9g/Py5Y3VHgLYHWUVkgf0DYDTWZLGy
      QTzbt+c5Z/4Go/5d+iIBn8xZhJd/F0VRqG818iCgtFlba2ka/YkE2ViMtVoN23+ytezjwBf/
      7+e05t9Hob3sWDggwc2Xu9uIEDCMTXXe40svy8X+9ubWFqWmZOrLBoWwtWv5VAgY0l1uKQZZ
      6RIXAdIJuO9oKJbO2ahLXA0RSNS6i85z2AeIxeOMTExgRuPcvD37rF/+uaMoClrYOvD5uCkY
      KP+moxe0hZSSjDPHRFaiqYJa4vyhS3i277Naq9FyXeKmiSoEdz54j4UvPqU1e51mtXzsJ8i5
      yZeJhA7DosaIqGMcMFHVlf0NDpNqQGylxAc3HTZa7Wu8UJFMf1lnQLb27B0AGEIi1O0nhICU
      8Ek4Drc2NK7VLD6tRTrLp89lnCKEIBaPIZSDc7q7FSEE6ujrvLtg8po1Rdza24jPpxt8MPsJ
      Yf5S26+rXCKoLvNyXxMQ3FnxiQwdvlTquS7VjQ2aqRSKorA+N4MXBGg33+G7PznN9Qe3KEUm
      iI+/TLVcIZ5MoD+GJEs3oWsaUtWAw4d5AkkoQd2nQSfVADOscXMaqvWQU8ImL3wO2/+yD9BE
      yODRshXUIMR8ngEAkM6kSB+/IicAVE1DHXuF91cLxMpzXDDmye3IizNUwfczMyyXZglkSH9c
      sG753JiqUiNB/PI/JWYdnkjn2C1qxXXq1SqDo6NIzyGdL1C3vs0vK2mssQFC26ZWrXF/dpXB
      fofB4SHCIEA8hVP9UWBGYzTNNDiHu1eGEoIDAgDAVCRjQZ1VVNLKo4eKj7px7nyb4zFTPSIS
      /aeAU3y6sYZZusuwWGY4GaCpbePs/rjs7B63nIARpcKCWcDK5KjaNoHvox6wGBBPpognt3dK
      8xPngd25L9HNp1/Jbvck+02+uxW72cSp1pjRLE4pNtoBDdxSJJ5UDt3VrQcKxmNsejUChagM
      Dr1D7KQXAI9BLJOHTJ5Z2+ZucY60M4etJGhpafqDOUa1VSqrRXRdYNjrzH70cyzFxcBDKgq1
      zCSJgdHH6rWPQ8/+uDirD3jtDEQ0jS9WkuQbNTYCDSlhpySVLRWsICS2I6053EzgbEmBHwrW
      PY2RfTI/d+KGgqm6TvaAIVcoJUuhQYLtu8g3Ihv0eRIEASufvstP1E+wVMmHKwavjQgMVRCE
      krtFeFBR0V7/A1K5vStHJxXf97E++h9cMRY7v/toXsFq2iQVH0sJOys7AtBFe8Jqh4JFz0DV
      YLahUxAuhpDElODQtAcp4Y5tEbEdDkrpWg819DDA2nGn6d0BviKqqjL4yo/5zfww4fp9IukS
      /7DapF9rYLuSs5kQRdVYjcV25cSfdDRNY7nvDWoPfo0IHM7GW5zOSTZaIWlte5a6nRICs45O
      BZ2LCZuY2p4Ym45PQgmxQ8GXdts5sl/3sERIRAkpBRoe7eFTyVUYPuQztVCJs1vRrhcAzwAh
      BPGRCzByAd/3cUrrzN95h58OtHu/m1Udw7Q6xx5GY6OIHo11jj/OVOstUrqO0TfKZzNT9JtN
      lsIIlh9SCVRGze2hSjVQkbrgpWirM1eYiLlccy1WPFDCkEHhoAkoejobaIQIYvhoIqQpFYYM
      n/tulAm5d9IdSGiFe81TegHwjNE0jWz/AF7y97l+608ZZhk92U/AwY0/8H0aG+so1SWclRm0
      Kz8mEovjh21Psf3wN21Eu3lSPP7Sa8SNt3DnH6DcuEXQrJJA4Z5UkEj8pMmE5RAgmA0MXo7b
      BFLihiARBBIKSTD64kzNuGitdsDklL26pNHNIEA18XyBzm5NVgVIKgGtUCHSGwI9f3Qrwt30
      D/n5cgszbPK66+4rgSKlhGt/ykv+PdbJYPzwD4lFY1i6jh8ElFotkJKm56EpCpamsV6t8sWn
      17ny2qtH8M0eH6Eo1D2PmZufcbpVBECTkrjiE0p40IjRCBQqvsrppEcQSr5U+smP5VFVwYef
      r/OTsyG5KBQ3FGTzMJkVqKkaE4ZDraqiyd1BUpUqjUDgCh1TOtTSA8QrK70AeJ4MDORwW/Os
      Bqf4+OptXrw4AkJhea1M1DIYHMzjbKxwxpkmbfncFUMM6Qau72PpOpqq0h9vm2xs6ecLIGEY
      xF5/jYP3q7sHIQQj/+hnLKiC5PT7xA1JuRaSFj56GDAQtBgUko2awfWaQT2t8d3h9h7KxorK
      fNFDVVTc9e1vu588TUlqxHXJdFkjJ7c3YG2pUJUqQSAZkC3WhEktO8hbf/gf+Pydv/7mpkN/
      HViWxflLZzmX9Qg8h7uLDe6tekQtnZX1KtevfcHQrT9hwGr3VmPObYJmg+Q+HgHKpmOKEAJD
      1xnMZjHDEPUYTKhVVSXx4huMJiXnIzZrqkUx1GmGKr5sf7ec8DglHCKtBtAOeDNi4Ls+06sh
      GW/vEuiWJLovwdNUThsO55IuAQJfCopSZykwMHyPVOghgIgMcPtGAMmrb/9eLwC+DgpDA3z/
      B68zEAvR3DL9hT5OD+e4XH+fEaveOS6lOizfvcb0nZs06rVdryGl7OQfCSHwPY+0ZTGUTB65
      K+bjkMhm+WLoB9zxEkxaTRxNQ1PB3NECpZSkhjLbnsuqghAQhgfYqQHroU4p1Bi32r1+Rg9Y
      Cg2WfB3h+hSCFiayc34Cn/TtD7n6f/6srTzR2wc4OsJrf86rwY1dv9uat02LUdz8FTzFYvxb
      39tzbqlUIpNpN5aG63Lr/jRh4BOEkMnnD9yBPmqqayuYH/45o+V7fOFEGVVamJtJcp4E+dIk
      l88kkFJyZ7HFzUWBmi6gtDzMtRkKGw+AduNfEyajEZdqqDJstO+ivymZGA3nkZ1CCPD93+vN
      AY4KS1HwzSiy0e7Zd45nhRBMyBlYneFG+qf7nu95Hp/fus3lSxdpbBSZCKfJp01Wyi6KOYyr
      adSc7ktGTOYLBG//G6be+0tG5j5mrmURi8dxkv3ISJxm0cZKCxaUcbzB0wxcynSujdNssv4n
      /5FU0GQ1NBiLuyS1kOSOVR0vFLt80quogCAhPaQQNFFpoSKFIHzvF70AOCpkENDy2o1/KwC2
      SiV3SS+G7W37MAy5fuNz4okklaaNq0fwfYVWq0VzbZqL+bb0SyjbZYhxTePmzS8Znhjvuo03
      VdOI/+D3WS19D69SQR89jaWqIATJMGQlDLE0jYd3QoxIhPUf/CtW6nWseJIHN98h1byzK4mu
      PyaptAQBAhcFNAWLgLUwggSSik+h/QzQWwY9MirNBgl3DUVR2i6IDzf8zoHzHRcWy4pQNVOY
      yQKWolBdfEAkEiE1dJHFld+QiqjI0Md2bJYWyxipAo5td6XxnhCCRC5PIrc7bXzLf+2gc/IT
      59g6o5FJU/+b/0RSukjaRTNnLIePYhaJqEBVYWPNIyYCYsr+OdK9ADgCgiBA/fh/MRld2iP/
      t/XvTNOiGESZVePEi0X68nmi0QjrlQ3MgVPtF9ItSqUSlVqD2WKEBhaxdA51fg0zkSaRjDN/
      5zMmzp85tDjnuBJNJCm98i+ZW/yMvqjH/ZsLDOguIqJxKdHgi7JBcp8a5J30AuAZIaUk8P1H
      GjR4rgPTf0fGbLLUUskZAaa6W0xASrjaLJD87r8ma1ncXZrn7sIKaqqPzFbjB5J9BW6trWLG
      E+Qmv8PDYi1SSmzHI9zMQTppVFeXyGlNzo7FGU5JPKESvX+HC9E6QkDDFY+0TO8FwDNASsnt
      a5+QyuXpHx4+VDbFLa/ypjlN9JTJat1g1Q65v+LyrWSdlLE9/IkNThBJJNsVasMT7SES7fXx
      joCUECTzB0utN+tV1hfnuatALpchncvu0iQ6zkgpCUvTfGt4o12fgSBpKViK31bmluD7jy4p
      PXndwhEghGDg1BDRRJxGtXLoseniVWJ6e126kBCczin0D6ZZNgcoO1uvB4PFjzrzAUUI1C2/
      YiAIw0PrhaWUhFJiWFFe/9nvMXhmkoYjKVY97t25z8zdqWNfb+y5LuOx2mbjb4sZXxiNMxe0
      d5E/Klok/UevgvXuAM+IdOHxjK43XJ17RZjIwlojZM02uDwWRRHw0U2fFcclkLAq0kQOMHtT
      hSAIQxS2zTqklLsKyxUhOi6OSiTKwHhboSOdL7A+P8Ptzz4n29+PYbZFaM1I5NhI2UDbrnXJ
      usRp7wYPFus8uL1ILBnllNpi1tah7vI4aYLH5xufEEr6EJfEPLfXJdlcismChrJZwfHGC+1R
      /NSywxereYYPGaooYtNieitH6JBjd9oFCSGIxJOkC4MoqobbatLyParFOpYWkslld527FVzd
      OIewBs7w8VILe/k9XlaLGK0iaLDY0trJcI8x0usFwNdIo1ziXPAFFV8iNZNCaveE2fYk10oZ
      lsUg1pnD7yhbiXFPQzyz3cgj8a1pYhbXbrG2skw8EcO0rE6j79Y5gxACdfBF5GqRT1dWUPyA
      aqBhNGxivZrg7kO3IuRSFoWo1hm77uS99QHEhbfJHFFva1gR1L5hatUK5dIKA6cGurbxbyGE
      wLjwJtc/+oSCWwXpIxUNNZBYHKCPsoPuu6+dYHTT4q52mZav7vEi2GiGVONnj3yooWo6yWwf
      UjWPjXivYVlceukib591ePucy0/PuvjRtoaSLwUrIoLP/oK5vQD4GhFCEBs6zw13nOChP8ZM
      RSPeP3Y0H2w/FI3wmASAEAJx/i0qgYYi2jvC49mANcVixYzxozMukcEoNbF3j6YXAEeAGLrC
      VGm3yttkPsBZ+Kwz6TxyAufI70ZPghmJUlfincdjMZ+fnXP5Z+NNYprkYryFv8/3OT7f8ASh
      aToL6u7e3tAEk+FnVL74FfMf/GUnCDzHxv7yb9m4/jdP/D4P65fC4xlyNColUolI14//d7KV
      CLj9uK00tzXSVAUY+8it9ybBR4Q+cInppWnOZEOCIEAIwXhOMM4MXy6H3Lj+K0xVcNq+wQvJ
      Gh/aeZ5UP3rL2GNnlumW2+JBNMoldNkilk4deEw3ohkGK0NvMLbyi32f1xVQIyoVLBo2pKVH
      BL8XAEeFZhg80C8xFn4OUnYaKsCFfsFZOcO96VXOZwJAMGaWubYwhZUdQrcer3dWVXXXRtlh
      +wVSSgLPI7QrJAtP7oF21EgpUX0HKfevHgP4Xn8LO4ApL44INGpN2QuAo0IIQWToIp/dn+Pl
      XGVXSnQYhhiqwJUqbC7lDcV8Eht/zOqyya34W4j8OeKZvkMD4UnW8QPfZ3nqBhMXzj2T7/d1
      05r9kktr7yMOGdRfr0dQheB0yidrtoeHvTnAESKEoK5mOv/fUo3rNNxw96AnYcKZpMNvy3e4
      Mv3fqCxMP7PP4jQbDJ4aPFYT3y2klETvv09cOVyGPWKqvNK/3fihFwBHjhh6ievF5C6bICEE
      S2Wf/sj+Gzm6CoMJ8Ksrz+xzKKpybD3LPMcm01p6qnN7AXDEaLpBffS3eKc2yb2S2ll7N3VB
      9ZBkRlURZCpfsnHjHVr16lf+HEIohMGjd067kercPYbU+iOP228FrKcK0UV4jo2/9AXfiU9z
      e9FmXCsRe4QpTMuDX+q/Tfrc61/pvStrK2QS2r7qdd1OZWmeQvEWodtCKT0A2tKKSEnBX8ES
      PpqABcegqVrEoiZ5UcVSw94kuJvQTQtt7BX+flbj6nqdfxKrcCl3eK8c0eHsxrus+N9C1Q6v
      RjsM6bXQjaczAD9qMkMjjL70CnKzTmLnpH95bhqvUeOz658ic/3o0SRGLEHrzkeMzF7tBUC3
      IYRAL1ygsVzihrvBJe7tOcYPJdMbCg46uiJZEMOYhzT+R7nSSykh9I7VxtdOQikpNpvkY7E9
      m3+Do2cAmG6q5MbOdAKklkyj/cW1XgB0I7phQODiyP0b9Z2ywbmzBSxdIQgln88OclBh5OM0
      6lppjWzf8ez9tyjW62QikUdOareuRyKbp/iP/11vEtyNCMDUBIv6BBW7bSS9s/eWmomlt/90
      qiIYiD669O/A3j8MkU4VwzxeDpT7sVytPlFVW3pguHcH6EaklLgBKLEhbpYM7mvnsZU4icYD
      ZqwXeDN6d9fxGVlk9dbPsaPDxEdf6Px+X52hrfcIQwLfp7q+RCaVfK7f5+ui7jg4vo+uKLuG
      Qr/+zSdYucF9z+kFQBeyvlZEiWYRqsYvwh8ST51Cj6WoeC9j6CbX6gXSy+9zud9HVQRXCgGw
      yoeLZer+BVRNO3Do4zkOxYX7+K06sUScdDZDJHq4petxwg9DjIdynfRonFgqvedYz3V7Q6Bu
      JAx8UDQCu45qGOjRdtmiqm8uUcb7+WX4W/z3qXPcXYdwcxPtfNrG/ezPCINgT1q1lJLy6iLO
      xgKF/gxnJy8yODJMNBb72r/f88Tfdy9j710w8H3Ks7d6AdCNyLCd0RW2yiQHz7BfgotqxWn1
      XeHPnZ/yR3f6kFKSiSpEVR/X2aulX1mZJ5uy6Cv0EzlhjX4nG829/mD15Vl8z8P3XFanb9Jq
      1Ck9uMmbo2YvALqRurOpFt2WfTj0WNWKkzHaS5gSmHczzDyY33WMlBIlsDGM4z/RfRThDgWL
      rWFgX0KnWlqntnCPbw+rDDRu88qQhmUavTlAN1KzQxDtzalH4TcreJ7D1VmPeTfNTDjCWGy3
      rnJbtnGvsdxJxPY8/DDsBIGUEtPQSdenmRjOYRo6Q/3bkuu9AOgywjCk7gj8oERyYGzf4Q9s
      r/DosTT3Y7/DfRniu3NcuThE/KEJn+fYmF2oEP28WCqXqS3MMHHuUju7VkheOLN7FWhrQ6wX
      AF1Gq9GgKS0Uv44W3asN9PDqztbjoLbGlcnTWNHYrslvGAa0SksUBvuf7wfvIirNJnajxNSN
      v0cIwenB1B4PhvY16gVA1xFKEFIeKEmyU6ltq/HblXVibhEzMrH7WKC8skihP3ds0xyeBqEo
      OHqCCwUFbbPQKNhcGQM6gVBvNHuT4G6jvFFBKhpmfG9N7tZE9+FS91alxKKX4+pHn9KobqdG
      O3YLQ/G71i/seRLL9bNUbDtObtVBa5rW+VFVlVQy3guAbiMatfAbJVQz0um1dv2EIWLTMXLL
      OdL1PISqsR5keO/qPdaWl/AcB7e8TF//8avvfRbohsGaZ3R6/SAI8H2/Y0m1df16AdBlCEVF
      i/fR3Fjt3Lp938fzPDzP2/XHc12XwPe3h0tCIK0sN2/PU16epf8YFrc/S6TvdWqst6yoFEXZ
      1aF88+6NXU652kQxcoTN9U5iVxiG+0qZqKqKb9cJFWOXFLgufPL5vVv/3zjMGM2WQzTS3kGv
      1Jo4ro+mKlSaLja9fYCuY7nsgRrsslra6rX2m8gqmkHeqKGogsrmtsHkucGuNMb7uomlMny+
      Mk9at6lJAzOZQ40a+J6LlY9ialovALqJeq1OI4zi2xvE032PdY6iGdB/ifOpOulsGqR8pE/Z
      NwXDsshtFsRkdnQeprW9UdibA3QJUkrmFtaRZgK8Jqr+sEvuwTn9QjMpVlrtFY5e49/Fo8xD
      egHQJbQaTRbKEhkE6IaB8iT1vUIglMcxBOrxML0A6BKCwCdQLdgc7x/G1vOdZdHqAuMjjzdk
      6rGb3hygS4hEo6iyiu/ZKIf05lJKnJUpEnGTiC5IRgQDk4VjZXDXTfSuWpewJY7rNzaID4wc
      emzcErwyeeobld7wvOgNgbqEtbUSvpFGQW5Xfu0g9Bz8egkZ+ET20bnv8XT07gBdQhiEBLUV
      Qru27/PSrnBlWKPZWic33Ov9nxW9O0CXUCqVSdTvEToHaFwace7dmcYy9RMhYdIt9O4AXYCU
      kmbTQYsk0JUDVnM2M0GPo3ZnN9MLgC7Ac12ycY0NN0Joi33THjSnxCtvvNIb+jxjegHQBXiu
      y61PP0WJ55CxfpzKKlZ6W+xQhiFRbf9coB5fjV4AdAGGabaLuKNZtEQfqrktVBW6LfqVNQZP
      9bI7nwe9AOgCZu7P4mAQTQ5A6KNZ2363llfi7ORwr/d/TvRWgY4YGYZUShskRyfR04Moirqr
      sbtaksWFFXzvmyFr8nXTC4AjRigKI2On8GvrhE4DI/KQTqeZ4EEry/Ly+tF8wBNOLwCOGCkl
      v/l/v6ZVWSdoVvYOdaTE9MvkcsfLuPq40AuALsD1fPTUAAQuZmr3PoDWWuXKRPpEKTh3E70A
      6ALMaAKvvEw0k0dRd9YBSFKG29v5fY70AuCIEUJg6QKhqnj1DQJvy+1FkrTnGB87yPyox7Og
      FwBdQN9AARF6eKHAKbfNr0Pfp5Ax0Q8pcVQApbc8+pXoBUAXoKoqaujSuv8xbr2MvbFM4LbY
      qLuHnpewLAqJBIleftBT0wuALmBodBQzYqGYMXzPpWU71Gc+Y21uBhk+LIS4TcW2Wa3VqDmP
      NsnrsT+9AOgCkpkMsUQS6dQRrQ3MyjQkBig7KsG+lj/bBI+oH+5xOL0A6AI0XefF115FUySe
      3URRBKazjjSSzC0UH1kk3+Pp6QVAl5DO5Zh8+SWEW6W4OEejUgbfZsnPcXd6mWa9vkvi+3mh
      KgoJa68m0UmllwzXJQghODs5Sa6/n4//7j0arSqeXafkNPAzaaTbJB7VKJw69VwVIIIwpG7v
      Ndk7qQjbtqW5zyrCzMoKM6urR/CRegS+z8LsHMtz8yBDJl95mXjyZJhZdxu9O0AXomoaoxPj
      jE6MU69WT7St6VGjeQek2QopifR0Jo+cSC531B/hRPP/AWdeXIQ7e9xgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World Happiness' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
